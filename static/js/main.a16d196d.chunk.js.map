{"version":3,"sources":["quotes.js","QuatersDisplay.js","buttons.js","functions.js","container.js","index.js"],"names":["quotes","url","Promise","success","fail","request","XMLHttpRequest","open","addEventListener","status","responseText","Error","concat","statusText","send","QuatersDisplay","icons","react_default","a","createElement","index_es","icon","faQuoteLeft","text","this","props","values","currenQuote","quote","author","color","background","className","style","React","Component","Buttons","context","date","change","func","twiter","faTwitter","tumblr","faTumblr","href","onClick","twitt","trumbl","getRandomNum","min","max","num","Math","floor","random","console","log","QuoteContex","createContext","QuoteProvider","Provider","QuoteConsumer","Consumer","Container","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","Fragment","QuatersDisplay_QuatersDisplay","buttons_Buttons","colors","App","_this","call","loadDate","load","then","_ref","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","JSON","parse","startDate","setState","length","document","body","state","stop","_x","catch","error","setQuote","printTwitter","encodeURIComponent","window","printTumbl","container_Container","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.a16d196d.chunk.js","sourcesContent":["\r\nexport default url=>{\r\n    return new Promise((success, fail)=>{\r\n        const request=new XMLHttpRequest();\r\n        request.open(\"GET\", url, true);\r\n        request.addEventListener('load',()=>{\r\n            request.status>=200 && request.status<400?\r\n            success(request.responseText):fail(new Error(`Request Failed:${request.statusText}`));\r\n        })\r\n        request.addEventListener('error', ()=>{\r\n            fail(new Error('Network Error'))\r\n        });\r\n        request.send();\r\n    })\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default class QuatersDisplay extends React.Component{\r\n    render(){\r\n        const icons=<FontAwesomeIcon icon={faQuoteLeft}/>\r\n        const text=this.props.values.currenQuote.quote?this.props.values.currenQuote.quote:\"We become what we think about.\";\r\n        const author=this.props.values.currenQuote.author?this.props.values.currenQuote.author:\"Earl Nightingale\";\r\n        const color=this.props.values.background?this.props.values.background:'#16a085';\r\n        return(\r\n           <div className='main-section'  style={{color:color}}>\r\n               <h2><span>{icons}{text}</span></h2>\r\n                <p className=\"author\">- {author}</p>\r\n           </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTumblr, faTwitter } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\n\r\nexport  const Buttons=(props)=>{\r\n    const color=props.context.date.background?props.context.date.background:'#16a085';\r\n    const change=props.context.func;\r\n    const twiter=<FontAwesomeIcon icon={faTwitter} color='#fff' className=\"social-icons\"/>\r\n    const tumblr=<FontAwesomeIcon icon={faTumblr} color='#fff' className=\"social-icons\"/>\r\n    return(\r\n        <div className=\"buttons-section\">\r\n            <div className=\"social\">\r\n                <a href='#' className=\"links\" style={{background:color}} onClick={props.context.twitt}>{twiter}</a>\r\n                <a href='#' className=\"links\" style={{background:color}} onClick={props.context.trumbl}>{tumblr}</a>\r\n            </div>\r\n            <button className=\"new-quote\" style={{background:color}} onClick={change}>New quote</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nfunction getRandomNum(min, max){\r\n    let num= Math.floor(Math.random()*(max-min+1)+min);\r\nconsole.log(num);\r\nreturn num;\r\n}\r\n\r\nconst QuoteContex=React.createContext();\r\nconst QuoteProvider=QuoteContex.Provider;\r\nconst QuoteConsumer=QuoteContex.Consumer;\r\n\r\nexport {getRandomNum, QuoteConsumer, QuoteContex, QuoteProvider};","import React from 'react';\r\nimport QuatersDisplay from './QuatersDisplay.js'\r\nimport {Buttons} from './buttons.js'\r\nimport {QuoteConsumer} from './functions.js'\r\n\r\nexport class Container extends React.Component{\r\nrender(){\r\n    return (\r\n        <div className='main-container'>\r\n            <QuoteConsumer>\r\n                {context=>{\r\n                    return(\r\n                        <React.Fragment>\r\n                        <QuatersDisplay values={context.date}></QuatersDisplay>\r\n                        <Buttons context={context}/> \r\n                    </React.Fragment>\r\n                    )   \r\n                }}\r\n            </QuoteConsumer>          \r\n        </div>\r\n    )\r\n}\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport load from './quotes.js'\r\nimport {Container} from './container.js';\r\nimport {getRandomNum, QuoteProvider} from './functions.js';\r\n\r\n\r\n\r\n\r\n\r\nconst colors=['#16a085', '#27ae60', '#2c3e50', '#f39c12', '#e74c3c', '#9b59b6', '#FB6964', '#342224', \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\r\nconst url='https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\n\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currenQuote:[],\r\n            background:null\r\n        }\r\n        this.startDate=[];\r\n       this.loadDate();\r\n      \r\n    }\r\n    loadDate = () => {\r\n            load(url).then(async res => {\r\n                let date = JSON.parse(res);\r\n                this.startDate=date.quotes;\r\n                this.setState({\r\n                    currenQuote:this.startDate[getRandomNum(0,this.startDate.length)],\r\n                    background:colors[getRandomNum(0,colors.length)]\r\n                })\r\n                document.body.style.background=this.state.background?this.state.background:'#16a085';\r\n            }).catch(error=>{console.log(error)})\r\n    }\r\n    setQuote=()=>{\r\n        const currenQuote=this.startDate[getRandomNum(0,this.startDate.length)];\r\n        const background=colors[getRandomNum(0,colors.length)];\r\n        this.setState({\r\n            currenQuote:currenQuote,\r\n            background:background\r\n        })\r\n        document.body.style.background=background?background:'#16a085';\r\n    }\r\nprintTwitter=()=>{\r\n    const url=`https://twitter.com/intent/tweet?hashtags=quotes&text=${encodeURIComponent(this.state.currenQuote.quote)} ${this.state.currenQuote.author}`;\r\n    window.open(url);\r\n}\r\nprintTumbl=()=>{\r\n    const url=`https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes&caption=${this.state.currenQuote.author}&content=${encodeURIComponent(this.state.currenQuote.quote)}&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button`;\r\n    window.open(url)\r\n}\r\n    render(){\r\n        return(\r\n            <div className='quates'>\r\n                <QuoteProvider value={{date:this.state,func:this.setQuote, twitt:this.printTwitter, trumbl:this.printTumbl}}>\r\n                       <Container/> \r\n                </QuoteProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}